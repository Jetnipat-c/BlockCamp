/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { SCB10X, SCB10XInterface } from "../../contracts/SCB10X";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "createAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "getAllAccount",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    name: "getAllAddress",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTotalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_from",
        type: "string",
      },
      {
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160065534801561001557600080fd5b5033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061199e806100666000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806389f4b3171161006657806389f4b3171461011c5780638b8b8d891461014c5780638c23283814610168578063bf40fac114610198578063f357b60f146101c857610093565b8063298daf5b146100985780632a48ac9a146100b45780635a73b0bf146100d05780637c0bfe02146100ec575b600080fd5b6100b260048036038101906100ad9190610fa7565b6101f8565b005b6100ce60048036038101906100c99190611084565b610450565b005b6100ea60048036038101906100e59190611084565b610557565b005b61010660048036038101906101019190610fa7565b6106fa565b60405161011391906111b1565b60405180910390f35b610136600480360381019061013191906111d3565b6107a6565b604051610143919061123e565b60405180910390f35b61016660048036038101906101619190611259565b61080c565b005b610182600480360381019061017d91906112f8565b610c02565b60405161018f919061123e565b60405180910390f35b6101b260048036038101906101ad9190610fa7565b610c4b565b6040516101bf9190611334565b60405180910390f35b6101e260048036038101906101dd91906112f8565b610c93565b6040516101ef9190611499565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff1660038260405161022091906114f7565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c9061156b565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906102f8929190610daa565b503360038260405161030a91906114f7565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906103cd929190610daa565b506001816040516103de91906114f7565b9081526020016040518091039020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161048d9392919061158b565b602060405180830381600087803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df91906115fa565b50806004846040516104f191906114f7565b908152602001604051809103902060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054b9190611656565b92505081905550505050565b8060048460405161056891906114f7565b908152602001604051809103902060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec906116f8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610630929190611718565b602060405180830381600087803b15801561064a57600080fd5b505af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068291906115fa565b508060048460405161069491906114f7565b908152602001604051809103902060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ee9190611741565b92505081905550505050565b606060018260405161070c91906114f7565b908152602001604051809103902080548060200260200160405190810160405280929190818152602001828054801561079a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610750575b50505050509050919050565b60006004836040516107b891906114f7565b908152602001604051809103902060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b8060048560405161081d91906114f7565b908152602001604051809103902060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a1906117c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003846040516108d291906114f7565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f9061182d565b60405180910390fd5b600060038460405161096a91906114f7565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003866040516109bf91906114f7565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905080610b1657600654606483610a1c919061187c565b610a2691906118ad565b82610a319190611741565b600485604051610a4191906114f7565b908152602001604051809103902060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a9b9190611656565b92505081905550600654606483610ab2919061187c565b610abc91906118ad565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b0a9190611656565b92505081905550610b89565b81600485604051610b2791906114f7565b908152602001604051809103902060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b819190611656565b925050819055505b81600486604051610b9a91906114f7565b908152602001604051809103902060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bf49190611741565b925050819055505050505050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600382604051610c5d91906114f7565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610d9f578382906000526020600020018054610d1290611936565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3e90611936565b8015610d8b5780601f10610d6057610100808354040283529160200191610d8b565b820191906000526020600020905b815481529060010190602001808311610d6e57829003601f168201915b505050505081526020019060010190610cf3565b505050509050919050565b828054610db690611936565b90600052602060002090601f016020900481019282610dd85760008555610e1f565b82601f10610df157805160ff1916838001178555610e1f565b82800160010185558215610e1f579182015b82811115610e1e578251825591602001919060010190610e03565b5b509050610e2c9190610e30565b5090565b5b80821115610e49576000816000905550600101610e31565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610eb482610e6b565b810181811067ffffffffffffffff82111715610ed357610ed2610e7c565b5b80604052505050565b6000610ee6610e4d565b9050610ef28282610eab565b919050565b600067ffffffffffffffff821115610f1257610f11610e7c565b5b610f1b82610e6b565b9050602081019050919050565b82818337600083830152505050565b6000610f4a610f4584610ef7565b610edc565b905082815260208101848484011115610f6657610f65610e66565b5b610f71848285610f28565b509392505050565b600082601f830112610f8e57610f8d610e61565b5b8135610f9e848260208601610f37565b91505092915050565b600060208284031215610fbd57610fbc610e57565b5b600082013567ffffffffffffffff811115610fdb57610fda610e5c565b5b610fe784828501610f79565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061101b82610ff0565b9050919050565b61102b81611010565b811461103657600080fd5b50565b60008135905061104881611022565b92915050565b6000819050919050565b6110618161104e565b811461106c57600080fd5b50565b60008135905061107e81611058565b92915050565b60008060006060848603121561109d5761109c610e57565b5b600084013567ffffffffffffffff8111156110bb576110ba610e5c565b5b6110c786828701610f79565b93505060206110d886828701611039565b92505060406110e98682870161106f565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61112881611010565b82525050565b600061113a838361111f565b60208301905092915050565b6000602082019050919050565b600061115e826110f3565b61116881856110fe565b93506111738361110f565b8060005b838110156111a457815161118b888261112e565b975061119683611146565b925050600181019050611177565b5085935050505092915050565b600060208201905081810360008301526111cb8184611153565b905092915050565b600080604083850312156111ea576111e9610e57565b5b600083013567ffffffffffffffff81111561120857611207610e5c565b5b61121485828601610f79565b925050602061122585828601611039565b9150509250929050565b6112388161104e565b82525050565b6000602082019050611253600083018461122f565b92915050565b6000806000806080858703121561127357611272610e57565b5b600085013567ffffffffffffffff81111561129157611290610e5c565b5b61129d87828801610f79565b945050602085013567ffffffffffffffff8111156112be576112bd610e5c565b5b6112ca87828801610f79565b93505060406112db87828801611039565b92505060606112ec8782880161106f565b91505092959194509250565b60006020828403121561130e5761130d610e57565b5b600061131c84828501611039565b91505092915050565b61132e81611010565b82525050565b60006020820190506113496000830184611325565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113b557808201518184015260208101905061139a565b838111156113c4576000848401525b50505050565b60006113d58261137b565b6113df8185611386565b93506113ef818560208601611397565b6113f881610e6b565b840191505092915050565b600061140f83836113ca565b905092915050565b6000602082019050919050565b600061142f8261134f565b611439818561135a565b93508360208202850161144b8561136b565b8060005b8581101561148757848403895281516114688582611403565b945061147383611417565b925060208a0199505060018101905061144f565b50829750879550505050505092915050565b600060208201905081810360008301526114b38184611424565b905092915050565b600081905092915050565b60006114d18261137b565b6114db81856114bb565b93506114eb818560208601611397565b80840191505092915050565b600061150382846114c6565b915081905092915050565b600082825260208201905092915050565b7f616c7265616479206163636f756e740000000000000000000000000000000000600082015250565b6000611555600f8361150e565b91506115608261151f565b602082019050919050565b6000602082019050818103600083015261158481611548565b9050919050565b60006060820190506115a06000830186611325565b6115ad6020830185611325565b6115ba604083018461122f565b949350505050565b60008115159050919050565b6115d7816115c2565b81146115e257600080fd5b50565b6000815190506115f4816115ce565b92915050565b6000602082840312156116105761160f610e57565b5b600061161e848285016115e5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116618261104e565b915061166c8361104e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116a1576116a0611627565b5b828201905092915050565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006116e260148361150e565b91506116ed826116ac565b602082019050919050565b60006020820190508181036000830152611711816116d5565b9050919050565b600060408201905061172d6000830185611325565b61173a602083018461122f565b9392505050565b600061174c8261104e565b91506117578361104e565b92508282101561176a57611769611627565b5b828203905092915050565b7f496e73756666696369656e742062616c616e63652e0000000000000000000000600082015250565b60006117ab60158361150e565b91506117b682611775565b602082019050919050565b600060208201905081810360008301526117da8161179e565b9050919050565b7f4e6f7420666f756e64206163636f756e74000000000000000000000000000000600082015250565b600061181760118361150e565b9150611822826117e1565b602082019050919050565b600060208201905081810360008301526118468161180a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006118878261104e565b91506118928361104e565b9250826118a2576118a161184d565b5b828204905092915050565b60006118b88261104e565b91506118c38361104e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118fc576118fb611627565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061194e57607f821691505b6020821081141561196257611961611907565b5b5091905056fea26469706673582212206c38cf54d010b9dd0d4efe6efbc218ba5c1c30191ab4023f88112878376bfa6964736f6c63430008090033";

type SCB10XConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SCB10XConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SCB10X__factory extends ContractFactory {
  constructor(...args: SCB10XConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SCB10X> {
    return super.deploy(overrides || {}) as Promise<SCB10X>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SCB10X {
    return super.attach(address) as SCB10X;
  }
  override connect(signer: Signer): SCB10X__factory {
    return super.connect(signer) as SCB10X__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SCB10XInterface {
    return new utils.Interface(_abi) as SCB10XInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SCB10X {
    return new Contract(address, _abi, signerOrProvider) as SCB10X;
  }
}
