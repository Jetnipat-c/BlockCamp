/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Bank, BankInterface } from "../Bank";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_bankAccount",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    name: "createBankAccountEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "depositEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bankAccount",
        type: "string",
      },
    ],
    name: "createBankAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bankAccount",
        type: "string",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getBankAccount",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct Bank.Account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061101a806100536000396000f3fe60806040526004361061004a5760003560e01c80630d3127701461004f57806312065fe01461008c5780637df6e854146100b75780638da5cb5b146100e0578063a26e11861461010b575b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906107e0565b610127565b60405161008391906108f2565b60405180910390f35b34801561009857600080fd5b506100a161023c565b6040516100ae9190610923565b60405180910390f35b3480156100c357600080fd5b506100de60048036038101906100d99190610a73565b610244565b005b3480156100ec57600080fd5b506100f561037a565b6040516101029190610afd565b60405180910390f35b61012560048036038101906101209190610a73565b61039e565b005b61012f6106d9565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106101805761017f610b18565b5b90600052602060002090600202016040518060400160405290816000820180546101a990610b76565b80601f01602080910402602001604051908101604052809291908181526020018280546101d590610b76565b80156102225780601f106101f757610100808354040283529160200191610222565b820191906000526020600020905b81548152906001019060200180831161020557829003601f168201915b505050505081526020016001820154815250509050919050565b600047905090565b60008061025083610598565b915091508115610295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028c90610c05565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040528085815260200160008152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908051906020019061032f9291906106f3565b506020820151816001015550507f65e3514b0715f27b7112b080cc5c33273b0f05d3575c8784340c7f3d2dc46441838260405161036d929190610c5e565b60405180910390a1505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600034116103e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d890610cda565b60405180910390fd5b6000806103ed83610598565b9150915081610431576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042890610d46565b60405180910390fd5b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163460405161047890610d97565b60006040518083038185875af1925050503d80600081146104b5576040519150601f19603f3d011682016040523d82523d6000602084013e6104ba565b606091505b5091509150816104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690610df8565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061055157610550610b18565b5b906000526020600020906002020160010160008282546105719190610e47565b92505081905550346002600082825461058a9190610e47565b925050819055505050505050565b6000806000836040516020016105ae9190610ed9565b60405160208183030381529060405280519060200120905060005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156106ca576000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061066657610665610b18565b5b90600052602060002090600202016000016040516020016106879190610f84565b604051602081830303815290604052805190602001209050828114156106b657600182945094505050506106d4565b5080806106c290610f9b565b9150506105c9565b5060008092509250505b915091565b604051806040016040528060608152602001600081525090565b8280546106ff90610b76565b90600052602060002090601f0160209004810192826107215760008555610768565b82601f1061073a57805160ff1916838001178555610768565b82800160010185558215610768579182015b8281111561076757825182559160200191906001019061074c565b5b5090506107759190610779565b5090565b5b8082111561079257600081600090555060010161077a565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6107bd816107aa565b81146107c857600080fd5b50565b6000813590506107da816107b4565b92915050565b6000602082840312156107f6576107f56107a0565b5b6000610804848285016107cb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561084757808201518184015260208101905061082c565b83811115610856576000848401525b50505050565b6000601f19601f8301169050919050565b60006108788261080d565b6108828185610818565b9350610892818560208601610829565b61089b8161085c565b840191505092915050565b6108af816107aa565b82525050565b600060408301600083015184820360008601526108d2828261086d565b91505060208301516108e760208601826108a6565b508091505092915050565b6000602082019050818103600083015261090c81846108b5565b905092915050565b61091d816107aa565b82525050565b60006020820190506109386000830184610914565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109808261085c565b810181811067ffffffffffffffff8211171561099f5761099e610948565b5b80604052505050565b60006109b2610796565b90506109be8282610977565b919050565b600067ffffffffffffffff8211156109de576109dd610948565b5b6109e78261085c565b9050602081019050919050565b82818337600083830152505050565b6000610a16610a11846109c3565b6109a8565b905082815260208101848484011115610a3257610a31610943565b5b610a3d8482856109f4565b509392505050565b600082601f830112610a5a57610a5961093e565b5b8135610a6a848260208601610a03565b91505092915050565b600060208284031215610a8957610a886107a0565b5b600082013567ffffffffffffffff811115610aa757610aa66107a5565b5b610ab384828501610a45565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae782610abc565b9050919050565b610af781610adc565b82525050565b6000602082019050610b126000830184610aee565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b8e57607f821691505b60208210811415610ba257610ba1610b47565b5b50919050565b600082825260208201905092915050565b7f416c7265616479206861766520616e206163636f756e74206e616d652e000000600082015250565b6000610bef601d83610ba8565b9150610bfa82610bb9565b602082019050919050565b60006020820190508181036000830152610c1e81610be2565b9050919050565b6000610c308261080d565b610c3a8185610ba8565b9350610c4a818560208601610829565b610c538161085c565b840191505092915050565b60006040820190508181036000830152610c788185610c25565b9050610c876020830184610914565b9392505050565b7f57726f6e6720616d6f756e742100000000000000000000000000000000000000600082015250565b6000610cc4600d83610ba8565b9150610ccf82610c8e565b602082019050919050565b60006020820190508181036000830152610cf381610cb7565b9050919050565b7f4e6f7420666f756e64206163636f756e74210000000000000000000000000000600082015250565b6000610d30601283610ba8565b9150610d3b82610cfa565b602082019050919050565b60006020820190508181036000830152610d5f81610d23565b9050919050565b600081905092915050565b50565b6000610d81600083610d66565b9150610d8c82610d71565b600082019050919050565b6000610da282610d74565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610de2601483610ba8565b9150610ded82610dac565b602082019050919050565b60006020820190508181036000830152610e1181610dd5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e52826107aa565b9150610e5d836107aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e9257610e91610e18565b5b828201905092915050565b600081905092915050565b6000610eb38261080d565b610ebd8185610e9d565b9350610ecd818560208601610829565b80840191505092915050565b6000610ee58284610ea8565b915081905092915050565b60008190508160005260206000209050919050565b60008154610f1281610b76565b610f1c8186610e9d565b94506001821660008114610f375760018114610f4857610f7b565b60ff19831686528186019350610f7b565b610f5185610ef0565b60005b83811015610f7357815481890152600182019150602081019050610f54565b838801955050505b50505092915050565b6000610f908284610f05565b915081905092915050565b6000610fa6826107aa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fd957610fd8610e18565b5b60018201905091905056fea2646970667358221220ea57ba1a5dce4269f046e1b2b5b71093b64acfeb671b323f8aa4fa00ce74291564736f6c63430008090033";

type BankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bank__factory extends ContractFactory {
  constructor(...args: BankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Bank> {
    return super.deploy(overrides || {}) as Promise<Bank>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Bank {
    return super.attach(address) as Bank;
  }
  override connect(signer: Signer): Bank__factory {
    return super.connect(signer) as Bank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new utils.Interface(_abi) as BankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bank {
    return new Contract(address, _abi, signerOrProvider) as Bank;
  }
}
